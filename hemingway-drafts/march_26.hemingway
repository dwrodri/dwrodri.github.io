{"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://en.wikipedia.org/wiki/Multilayer_perceptron"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.youtube.com/watch?v=VrgYtFhVGmg"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.youtube.com/watch?v=MgowR4pq3e8"}}},"blocks":[{"key":"fntbb","text":"Modern neural networks in C++ for the college sophomore, part one. ","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7rkio","text":"","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4au27","text":"Introduction","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"clrvo","text":"Over the course of the past several months, I have been working on writing a neural network in C++. It is one of the simplest kinds, the multi-layer perceptron. I wrote this code to familiarize myself with neural nets, and I'd like to share it with others so they can do the same. This blog post will dissect my code piece by piece, and convey the basics of a multi-layer perceptron along the way. According to my text editor, I've gotten my writing style down to the seventh grade level. That said, prepare yourself to learn quite a bit if  you're new to the world of deep learning. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":137,"length":22,"key":0}],"data":{}},{"key":"c0raq","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epc28","text":"In my (brief) experience with NNs, it seems a lot more people care about conducting experiments with NNs than building them. I want to show how NNs can be as fascinating to software engineers as they are to data scientists. I started this project to become a better data scientist, but I ended up growing more as a software engineer. Over the course of development, I made a lot of design decisions which you wouldn't find in a typical class assignment. I want my code to highlight the importance of vector operations, but I don't want hide all the math in a CUDA kernel. I simplified my code for readability, but not so that it doesn't illustrate the complexity of designing modern NNs. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dsfbf","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7iu2e","text":"You are in the right place if any of the following statements are true:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ckirh","text":"You're sick and tired of hearing the phrase \"deep learning\" and not knowing what it means.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e8rib","text":"You're a computer science student who has been searching for a NN tutorial that doesn't use Python.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":80,"length":7,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"1411d","text":"You've written some code in C++ before and won't melt at the sight of the STL.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"k386","text":"You're not the best at calculus or linear algebra, but enjoy programming. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2lgfu","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9fn2g","text":"Outline:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eutg3","text":"Rant justifying my work","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6br87","text":"As little theory as possible","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1ek89","text":"Code Part I: Header files & Setup","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6d1d4","text":"Code Part II: ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3c0c9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9583e","text":"Motivation","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dqnv4","text":"Research in neural networks has produced quite the razzmatazz over the course of the past twelve years or so. The emergence of the use of neural networks (abbreviated as NN hereon) has brought forth revolutions in several fields. NN research caught the world's attention when it revolutionized the world of computer vision. Since then, researchers have tried using NNs for everything from generating photos of fake celebrities to playing Go. Recently, there has been a notable increase in good educational resources that cover NNs. As happy as I am to know there are more learning resources out there, I have some bones to pick with the current educational landscape:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":279,"length":43,"key":1},{"offset":389,"length":37,"key":2},{"offset":430,"length":10,"key":3}],"data":{}},{"key":"ccpkv","text":"Many learning resources like to drown you in dense formulas. Don't get me wrong, dense formulas are great at describing very complex relationships in a small amount of space on a sheet of paper. My problem with these formulas is that they are often too dense. They can be quite hard to decipher if you are not very familiar with calculus and linear algebra. I'd like to replace those formulas with animations. ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4fjgt","text":"I have no evidence to prove this, but I'm almost certain the most popular language for building NNs is Python. NNs built in Python often hide all the impressive feats of software engineering in a library. I want to show you those interesting bits and how I chose to write them in C++.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6heg7","text":"I should preface that my C++ experience is almost non-existent. Before this project, I was much more comfortable with Python, Java and C programming. I've done as much as I can to gravitate away from my C programming habits and let the advancements in modern C++ do their work. I plan to perform some extensive refactoring down the line, but to not let the perfect get in the way of the good I'm posting this now. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]}